{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["// DOM Content Loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize all functionality\n    initNavigation();\n    initSmoothScrolling();\n    initScrollEffects();\n    initLiveToggle();\n    initTicketPopup();\n    initDeadlineTooltips();\n    initRegistrationAutoClose();\n});\n// Navigation functionality\nfunction initNavigation() {\n    const navToggle = document.getElementById('nav-toggle');\n    const navMenu = document.querySelector('.nav__menu');\n    if (navToggle && navMenu) {\n        navToggle.addEventListener('click', function() {\n            navMenu.classList.toggle('nav__menu--active');\n            navToggle.classList.toggle('nav__toggle--active');\n        });\n        // Close button inside the drawer\n        const navClose = document.querySelector('.nav__close');\n        if (navClose) navClose.addEventListener('click', function() {\n            navMenu.classList.remove('nav__menu--active');\n            navToggle.classList.remove('nav__toggle--active');\n        });\n        // Close mobile menu when clicking on a link\n        const navLinks = document.querySelectorAll('.nav__link');\n        navLinks.forEach((link)=>{\n            link.addEventListener('click', function() {\n                navMenu.classList.remove('nav__menu--active');\n                navToggle.classList.remove('nav__toggle--active');\n            });\n        });\n        // Close mobile menu when clicking outside\n        document.addEventListener('click', function(event) {\n            if (!navToggle.contains(event.target) && !navMenu.contains(event.target)) {\n                navMenu.classList.remove('nav__menu--active');\n                navToggle.classList.remove('nav__toggle--active');\n            }\n        });\n    }\n}\n// Smooth scrolling for anchor links\nfunction initSmoothScrolling() {\n    const links = document.querySelectorAll('a[href^=\"#\"]');\n    links.forEach((link)=>{\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            const targetId = this.getAttribute('href');\n            const targetSection = document.querySelector(targetId);\n            if (targetSection) {\n                const headerHeight = document.querySelector('.header').offsetHeight;\n                const targetPosition = targetSection.offsetTop - headerHeight;\n                window.scrollTo({\n                    top: targetPosition,\n                    behavior: 'smooth'\n                });\n            }\n        });\n    });\n}\n// Scroll effects\nfunction initScrollEffects() {\n    // Header background on scroll\n    const header = document.querySelector('.header');\n    window.addEventListener('scroll', function() {\n        if (window.scrollY > 50) header.classList.add('header--scrolled');\n        else header.classList.remove('header--scrolled');\n    });\n}\n// Ticket popup close\nfunction initTicketPopup() {\n    const popup = document.querySelector('.ticket-popup');\n    if (!popup) return;\n    const closeBtn = popup.querySelector('.ticket-popup__close');\n    if (closeBtn) closeBtn.addEventListener('click', (e)=>{\n        e.stopPropagation();\n        popup.classList.add('ticket-popup--hidden');\n    });\n    // Remove from DOM after fade-out to avoid tab stops\n    popup.addEventListener('transitionend', (ev)=>{\n        if (ev.propertyName === 'opacity' && popup.classList.contains('ticket-popup--hidden')) popup.style.display = 'none';\n    });\n}\n// Live player toggle (YouTube/Twitch)\nfunction initLiveToggle() {\n    const tabs = document.querySelectorAll('.live__tab');\n    const panes = document.querySelectorAll('.live__pane');\n    if (!tabs.length || !panes.length) return;\n    tabs.forEach((tab)=>{\n        tab.addEventListener('click', ()=>{\n            const target = tab.getAttribute('data-target');\n            if (!target) return;\n            // update tab active state\n            tabs.forEach((t)=>{\n                const isActive = t === tab;\n                t.classList.toggle('is-active', isActive);\n                t.setAttribute('aria-selected', isActive ? 'true' : 'false');\n            });\n            // update panes\n            panes.forEach((pane)=>{\n                const isMatch = pane.getAttribute('data-pane') === target;\n                pane.classList.toggle('is-active', isMatch);\n                pane.setAttribute('aria-hidden', isMatch ? 'false' : 'true');\n            });\n        });\n    });\n}\n// Show remaining time tooltip on qualifier deadlines\nfunction initDeadlineTooltips() {\n    const deadlineEls = document.querySelectorAll('.qualifier-card__deadline');\n    if (!deadlineEls.length) return;\n    // Single tooltip element reused for all deadlines\n    const tip = document.createElement('div');\n    tip.className = 'tooltip tooltip--deadline';\n    tip.setAttribute('role', 'tooltip');\n    document.body.appendChild(tip);\n    const formatRemaining = (ms)=>{\n        if (ms <= 0) return \"\\u7DE0\\u5207\\u6E08\\u307F\";\n        const totalMinutes = Math.floor(ms / 60000);\n        const days = Math.floor(totalMinutes / 1440);\n        const hours = Math.floor(totalMinutes % 1440 / 60);\n        const minutes = totalMinutes % 60;\n        const parts = [];\n        if (days) parts.push(`${days}\\u{65E5}`);\n        parts.push(`${hours}\\u{6642}\\u{9593}`);\n        parts.push(`${minutes}\\u{5206}`);\n        return `\\u{7DE0}\\u{5207}\\u{307E}\\u{3067} \\u{6B8B}\\u{308A}: ${parts.join(' ')}`;\n    };\n    const parseDeadline = (el)=>{\n        let iso = el.getAttribute('data-deadline');\n        if (!iso) {\n            const text = el.textContent || '';\n            const m = text.match(/(\\d{1,2})\\/(\\d{1,2}).*?(\\d{1,2}):(\\d{2})/);\n            if (m) {\n                const year = new Date().getFullYear();\n                const mm = String(parseInt(m[1], 10)).padStart(2, '0');\n                const dd = String(parseInt(m[2], 10)).padStart(2, '0');\n                const hh = String(parseInt(m[3], 10)).padStart(2, '0');\n                const mi = String(parseInt(m[4], 10)).padStart(2, '0');\n                iso = `${year}-${mm}-${dd}T${hh}:${mi}:00+09:00`;\n            }\n        }\n        if (!iso) return null;\n        const deadline = new Date(iso);\n        if (isNaN(deadline.getTime())) return null;\n        return deadline;\n    };\n    const showTip = (el)=>{\n        const deadline = parseDeadline(el);\n        if (!deadline) return;\n        const now = new Date();\n        const diff = deadline.getTime() - now.getTime();\n        tip.textContent = formatRemaining(diff);\n        // Make visible to measure\n        tip.style.display = 'block';\n        tip.classList.add('tooltip--visible');\n        tip.classList.remove('tooltip--below');\n        const rect = el.getBoundingClientRect();\n        const tipW = tip.offsetWidth;\n        const tipH = tip.offsetHeight;\n        let left = rect.left + window.scrollX + rect.width / 2 - tipW / 2;\n        left = Math.max(window.scrollX + 8, Math.min(left, window.scrollX + window.innerWidth - tipW - 8));\n        // Prefer above; if not enough space, place below\n        let top = rect.top + window.scrollY - tipH - 10;\n        if (top < window.scrollY + 8) {\n            top = rect.bottom + window.scrollY + 10;\n            tip.classList.add('tooltip--below');\n        }\n        tip.style.left = `${left}px`;\n        tip.style.top = `${top}px`;\n    };\n    const hideTip = ()=>{\n        tip.classList.remove('tooltip--visible');\n        tip.style.display = 'none';\n    };\n    deadlineEls.forEach((el)=>{\n        el.addEventListener('mouseenter', ()=>showTip(el));\n        el.addEventListener('mouseleave', hideTip);\n        el.addEventListener('focus', ()=>showTip(el));\n        el.addEventListener('blur', hideTip);\n    });\n    window.addEventListener('scroll', hideTip, {\n        passive: true\n    });\n    window.addEventListener('resize', hideTip, {\n        passive: true\n    });\n}\n// Auto-close qualifier registration links after deadline\nfunction initRegistrationAutoClose() {\n    const cards = document.querySelectorAll('.qualifier-card');\n    if (!cards.length) return;\n    const parseDeadlineFromEl = (deadlineEl)=>{\n        if (!deadlineEl) return null;\n        let iso = deadlineEl.getAttribute('data-deadline');\n        if (!iso) {\n            const text = deadlineEl.textContent || '';\n            const m = text.match(/(\\d{1,2})\\/(\\d{1,2}).*?(\\d{1,2}):(\\d{2})/);\n            if (m) {\n                const year = new Date().getFullYear();\n                const mm = String(parseInt(m[1], 10)).padStart(2, '0');\n                const dd = String(parseInt(m[2], 10)).padStart(2, '0');\n                const hh = String(parseInt(m[3], 10)).padStart(2, '0');\n                const mi = String(parseInt(m[4], 10)).padStart(2, '0');\n                // Interpret as JST to match displayed times\n                iso = `${year}-${mm}-${dd}T${hh}:${mi}:00+09:00`;\n            }\n        }\n        if (!iso) return null;\n        const d = new Date(iso);\n        return isNaN(d.getTime()) ? null : d;\n    };\n    cards.forEach((card)=>{\n        const link = card.querySelector('.qualifier-card__register');\n        const deadlineEl = card.querySelector('.qualifier-card__deadline');\n        if (!link || !deadlineEl) return;\n        const deadline = parseDeadlineFromEl(deadlineEl);\n        if (!deadline) return;\n        // Flip to closed right after the displayed minute (e.g., 23:59 -> 00:00)\n        const cutoverMs = deadline.getTime() + 60000; // plus 1 minute\n        const now = new Date();\n        if (now.getTime() >= cutoverMs) {\n            link.href = '#';\n            link.textContent = \"\\u9078\\u624B\\u767B\\u9332\\u7D42\\u4E86\";\n            link.setAttribute('aria-disabled', 'true');\n            // Avoid opening a blank tab when disabled\n            link.removeAttribute('target');\n            link.addEventListener('click', (e)=>{\n                e.preventDefault();\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=rashinban_lp.27855d46.js.map\n","// DOM Content Loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize all functionality\n    initNavigation();\n    initSmoothScrolling();\n    initScrollEffects();\n    initLiveToggle();\n    initTicketPopup();\n    initDeadlineTooltips();\n    initRegistrationAutoClose();\n});\n\n// Navigation functionality\nfunction initNavigation() {\n    const navToggle = document.getElementById('nav-toggle');\n    const navMenu = document.querySelector('.nav__menu');\n    \n    if (navToggle && navMenu) {\n        navToggle.addEventListener('click', function() {\n            navMenu.classList.toggle('nav__menu--active');\n            navToggle.classList.toggle('nav__toggle--active');\n        });\n\n        // Close button inside the drawer\n        const navClose = document.querySelector('.nav__close');\n        if (navClose) {\n            navClose.addEventListener('click', function() {\n                navMenu.classList.remove('nav__menu--active');\n                navToggle.classList.remove('nav__toggle--active');\n            });\n        }\n\n        // Close mobile menu when clicking on a link\n        const navLinks = document.querySelectorAll('.nav__link');\n        navLinks.forEach(link => {\n            link.addEventListener('click', function() {\n                navMenu.classList.remove('nav__menu--active');\n                navToggle.classList.remove('nav__toggle--active');\n            });\n        });\n\n        // Close mobile menu when clicking outside\n        document.addEventListener('click', function(event) {\n            if (!navToggle.contains(event.target) && !navMenu.contains(event.target)) {\n                navMenu.classList.remove('nav__menu--active');\n                navToggle.classList.remove('nav__toggle--active');\n            }\n        });\n    }\n}\n\n// Smooth scrolling for anchor links\nfunction initSmoothScrolling() {\n    const links = document.querySelectorAll('a[href^=\"#\"]');\n    \n    links.forEach(link => {\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            \n            const targetId = this.getAttribute('href');\n            const targetSection = document.querySelector(targetId);\n            \n            if (targetSection) {\n                const headerHeight = document.querySelector('.header').offsetHeight;\n                const targetPosition = targetSection.offsetTop - headerHeight;\n                \n                window.scrollTo({\n                    top: targetPosition,\n                    behavior: 'smooth'\n                });\n            }\n        });\n    });\n}\n\n\n// Scroll effects\nfunction initScrollEffects() {\n    // Header background on scroll\n    const header = document.querySelector('.header');\n    \n    window.addEventListener('scroll', function() {\n        if (window.scrollY > 50) {\n            header.classList.add('header--scrolled');\n        } else {\n            header.classList.remove('header--scrolled');\n        }\n    });\n}\n\n// Ticket popup close\nfunction initTicketPopup() {\n    const popup = document.querySelector('.ticket-popup');\n    if (!popup) return;\n    const closeBtn = popup.querySelector('.ticket-popup__close');\n    if (closeBtn) {\n        closeBtn.addEventListener('click', (e) => {\n            e.stopPropagation();\n            popup.classList.add('ticket-popup--hidden');\n        });\n    }\n\n    // Remove from DOM after fade-out to avoid tab stops\n    popup.addEventListener('transitionend', (ev) => {\n        if (ev.propertyName === 'opacity' && popup.classList.contains('ticket-popup--hidden')) {\n            popup.style.display = 'none';\n        }\n    });\n}\n// Live player toggle (YouTube/Twitch)\nfunction initLiveToggle() {\n    const tabs = document.querySelectorAll('.live__tab');\n    const panes = document.querySelectorAll('.live__pane');\n    if (!tabs.length || !panes.length) return;\n\n    tabs.forEach(tab => {\n        tab.addEventListener('click', () => {\n            const target = tab.getAttribute('data-target');\n            if (!target) return;\n\n            // update tab active state\n            tabs.forEach(t => {\n                const isActive = t === tab;\n                t.classList.toggle('is-active', isActive);\n                t.setAttribute('aria-selected', isActive ? 'true' : 'false');\n            });\n\n            // update panes\n            panes.forEach(pane => {\n                const isMatch = pane.getAttribute('data-pane') === target;\n                pane.classList.toggle('is-active', isMatch);\n                pane.setAttribute('aria-hidden', isMatch ? 'false' : 'true');\n            });\n        });\n    });\n}\n\n// Show remaining time tooltip on qualifier deadlines\nfunction initDeadlineTooltips() {\n    const deadlineEls = document.querySelectorAll('.qualifier-card__deadline');\n    if (!deadlineEls.length) return;\n\n    // Single tooltip element reused for all deadlines\n    const tip = document.createElement('div');\n    tip.className = 'tooltip tooltip--deadline';\n    tip.setAttribute('role', 'tooltip');\n    document.body.appendChild(tip);\n\n    const formatRemaining = (ms) => {\n        if (ms <= 0) return '締切済み';\n        const totalMinutes = Math.floor(ms / (60 * 1000));\n        const days = Math.floor(totalMinutes / (60 * 24));\n        const hours = Math.floor((totalMinutes % (60 * 24)) / 60);\n        const minutes = totalMinutes % 60;\n        const parts = [];\n        if (days) parts.push(`${days}日`);\n        parts.push(`${hours}時間`);\n        parts.push(`${minutes}分`);\n        return `締切まで 残り: ${parts.join(' ')}`;\n    };\n\n    const parseDeadline = (el) => {\n        let iso = el.getAttribute('data-deadline');\n        if (!iso) {\n            const text = el.textContent || '';\n            const m = text.match(/(\\d{1,2})\\/(\\d{1,2}).*?(\\d{1,2}):(\\d{2})/);\n            if (m) {\n                const year = new Date().getFullYear();\n                const mm = String(parseInt(m[1], 10)).padStart(2, '0');\n                const dd = String(parseInt(m[2], 10)).padStart(2, '0');\n                const hh = String(parseInt(m[3], 10)).padStart(2, '0');\n                const mi = String(parseInt(m[4], 10)).padStart(2, '0');\n                iso = `${year}-${mm}-${dd}T${hh}:${mi}:00+09:00`;\n            }\n        }\n        if (!iso) return null;\n        const deadline = new Date(iso);\n        if (isNaN(deadline.getTime())) return null;\n        return deadline;\n    };\n\n    const showTip = (el) => {\n        const deadline = parseDeadline(el);\n        if (!deadline) return;\n        const now = new Date();\n        const diff = deadline.getTime() - now.getTime();\n        tip.textContent = formatRemaining(diff);\n\n        // Make visible to measure\n        tip.style.display = 'block';\n        tip.classList.add('tooltip--visible');\n        tip.classList.remove('tooltip--below');\n\n        const rect = el.getBoundingClientRect();\n        const tipW = tip.offsetWidth;\n        const tipH = tip.offsetHeight;\n\n        let left = rect.left + window.scrollX + (rect.width / 2) - (tipW / 2);\n        left = Math.max(window.scrollX + 8, Math.min(left, window.scrollX + window.innerWidth - tipW - 8));\n\n        // Prefer above; if not enough space, place below\n        let top = rect.top + window.scrollY - tipH - 10;\n        if (top < window.scrollY + 8) {\n            top = rect.bottom + window.scrollY + 10;\n            tip.classList.add('tooltip--below');\n        }\n\n        tip.style.left = `${left}px`;\n        tip.style.top = `${top}px`;\n    };\n\n    const hideTip = () => {\n        tip.classList.remove('tooltip--visible');\n        tip.style.display = 'none';\n    };\n\n    deadlineEls.forEach((el) => {\n        el.addEventListener('mouseenter', () => showTip(el));\n        el.addEventListener('mouseleave', hideTip);\n        el.addEventListener('focus', () => showTip(el));\n        el.addEventListener('blur', hideTip);\n    });\n\n    window.addEventListener('scroll', hideTip, { passive: true });\n    window.addEventListener('resize', hideTip, { passive: true });\n}\n\n// Auto-close qualifier registration links after deadline\nfunction initRegistrationAutoClose() {\n    const cards = document.querySelectorAll('.qualifier-card');\n    if (!cards.length) return;\n\n    const parseDeadlineFromEl = (deadlineEl) => {\n        if (!deadlineEl) return null;\n        let iso = deadlineEl.getAttribute('data-deadline');\n        if (!iso) {\n            const text = deadlineEl.textContent || '';\n            const m = text.match(/(\\d{1,2})\\/(\\d{1,2}).*?(\\d{1,2}):(\\d{2})/);\n            if (m) {\n                const year = new Date().getFullYear();\n                const mm = String(parseInt(m[1], 10)).padStart(2, '0');\n                const dd = String(parseInt(m[2], 10)).padStart(2, '0');\n                const hh = String(parseInt(m[3], 10)).padStart(2, '0');\n                const mi = String(parseInt(m[4], 10)).padStart(2, '0');\n                // Interpret as JST to match displayed times\n                iso = `${year}-${mm}-${dd}T${hh}:${mi}:00+09:00`;\n            }\n        }\n        if (!iso) return null;\n        const d = new Date(iso);\n        return isNaN(d.getTime()) ? null : d;\n    };\n\n    cards.forEach((card) => {\n        const link = card.querySelector('.qualifier-card__register');\n        const deadlineEl = card.querySelector('.qualifier-card__deadline');\n        if (!link || !deadlineEl) return;\n\n        const deadline = parseDeadlineFromEl(deadlineEl);\n        if (!deadline) return;\n\n        // Flip to closed right after the displayed minute (e.g., 23:59 -> 00:00)\n        const cutoverMs = deadline.getTime() + 60 * 1000; // plus 1 minute\n        const now = new Date();\n        if (now.getTime() >= cutoverMs) {\n            link.href = '#';\n            link.textContent = '選手登録終了';\n            link.setAttribute('aria-disabled', 'true');\n            // Avoid opening a blank tab when disabled\n            link.removeAttribute('target');\n            link.addEventListener('click', (e) => {\n                e.preventDefault();\n            });\n        }\n    });\n}\n"],"names":["initNavigation","navToggle","document","getElementById","navMenu","querySelector","addEventListener","classList","toggle","navClose","remove","navLinks","querySelectorAll","forEach","link","event","contains","target","initSmoothScrolling","links","e","preventDefault","targetId","getAttribute","targetSection","headerHeight","offsetHeight","targetPosition","offsetTop","window","scrollTo","top","behavior","initScrollEffects","header","scrollY","add","initTicketPopup","popup","closeBtn","stopPropagation","ev","propertyName","style","display","initLiveToggle","tabs","panes","length","tab","t","isActive","setAttribute","pane","isMatch","initDeadlineTooltips","deadlineEls","tip","createElement","className","body","appendChild","showTip","el","deadline","parseDeadline","iso","m","text","textContent","match","year","Date","getFullYear","mm","String","parseInt","padStart","dd","hh","mi","isNaN","getTime","now","formatRemaining","ms","totalMinutes","Math","floor","days","hours","parts","push","join","rect","getBoundingClientRect","tipW","offsetWidth","tipH","left","scrollX","width","max","min","innerWidth","bottom","hideTip","passive","initRegistrationAutoClose","cards","card","deadlineEl","parseDeadlineFromEl","d","cutoverMs","href","removeAttribute"],"version":3,"file":"rashinban_lp.27855d46.js.map"}